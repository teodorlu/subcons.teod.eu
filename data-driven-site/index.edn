^{:teod.subcons/filewriter :teod.subcons.filewriter/hiccup-html
  :teod.subcons/transformers [teod.subcons.sci/eval]}
(let [hakyll "https://jaspervdj.be/hakyll/"
      twitter-kentbeck-tcr "https://medium.com/@kentbeck_7670/test-commit-revert-870bbd756864"
      twitter-oddmunds "https://twitter.com/jraregris"
      twitter-jackrusher "https://twitter.com/jackrusher"
      twitter-magnars "https://twitter.com/magnars/"
      github-edn "https://github.com/teodorlu/subcons.teod.eu/blob/fa048e7/data-driven-site/index.edn"
      github-build "https://github.com/teodorlu/subcons.teod.eu/blob/fa048e7/src/teod/subcons/build.clj"
      github-html "https://github.com/teodorlu/subcons.teod.eu/blob/fa048e7/data-driven-site/index.html"
      title "A data-driven approach to static sites"
      teodorheggelund-com "https://www.teodorheggelund.com/"
      ]
  [:html
   [:head
    [:meta {:charset "utf-8"}]
    [:title title]
    [:link {:rel "stylesheet" :href "style.css"}]
    [:meta {:name "viewport" :content "width=device-width, initial-scale=1"}]
    [:link {:rel "icon" :type "image/svg+xml" :href "/solarpunk1.svg"}]]
   [:body
    [:main
     [:section
      [:p [:a {:href ".."} ".."]]
      [:h1 {:style "color: #252525"}
       title]
      [:p "My " [:a {:href teodorheggelund-com} "old static site"]
       " setup was complex. I didn't really understand how it worked."
       " And it took half an hour to compile. Why? I used " [:a {:href hakyll} "Hakyll"]
       " (which is great), and compiled Pandoc from source"
       " (which I don't recommend)."
       " I've seriously enjoyed playing with " [:a {:href twitter-kentbeck-tcr} "TCR"] "."
       " Technically, TCR nudges you to minimize the time from having your code in one working state, to having your code in"
       " another working state."
       " I wanted something similar, but with the flexibility of playing around with raw HTML, and raw CSS."
       " Also, I wanted something that's really simple to " [:em "escape"] " from. Take the repo, delete everything not HTML and CSS"
       ", and you have an archive. Built to last."]

      [:p [:em "Tell me, how does it work?"] " I write straight into an " [:a {:href github-edn} "EDN file"] "."
       " If anyone wants to learn structural editing, writing a blog post in EDN is great exercise."
       " Then the " [:a {:href github-build} "build system"] " picks up the data, dispatching based on metadata in the EDN file."
       " Finally, an " [:a {:href github-html} "HTML file"] " is produced."]

      [:p "I didn't like that my old site isolated me from HTML and CSS. That's the worst way to learn."
       " Writing HTML/CSS first - then " [:em "opting"] " into more structure when required is an alternative."
       " Bonus - deploy times are really fast when Netlify's build is a pure file copy operation."]

      [:p [:em "But .. writing in Markdown or Org-mode is kind of nice."]
       " Sure! I'm thinking of providing a " [:em ":teod.subcons/transformers"] "-transformer with functions for loading"
       " markdown or org-mode files. Then I can keep control of each page, and embed content where I want."]

      [:p [:em "Sounds interesting?"] " Just steal this code and try. Or write your own static site mechanisms, it's quite fun."]

      [:p [:strong "Future work."] " Error handling is ... not. Don't make your transformer chain too long."
       " Also, I'd like to experiment with \"embedding\" other kinds of content. Markdown, Org-mode, Vega JSON, etc."]

      ;; View on web - Can this be a function / reusable component?
      [:p "Nods thanks go to " [:a {:href twitter-magnars} "Magnar Sveen"] ", " [:a {:href twitter-jackrusher} "Jack Rusher"] " for simple approaches to HTML with Clojure"
       ", and to " [:a {:href twitter-oddmunds} "Oddmund Str√∏mme"] " for discissions related to TCR and other things."]
      [:p "View this page on web: " [:a {:href "https://subcons.teod.eu/data-driven-site/"
                                         :target "_blank"}
                                     "https://subcons.teod.eu/data-driven-site/"]
       #_ "(repeating this over and over is boring, perhaps I can make something reusable)"]]]]])
